---
const { heading, subheading = "", btn, alwaysFree, monthlyPrices, yearlyPrices, listItems, listItemsExtra, borderClass } = Astro.props;

interface Props {
        listItems: string[];
        listItemsExtra: string[];
        heading: string;
        btn: { href: string, text: string };
        subheading: string;
        alwaysFree?: boolean;
        monthlyPrices?: { oldPrice: string; price: string };
        yearlyPrices?: { oldPrice: string; price: string };
        borderClass: string;
      }
---

<div class={`price-card__container ${borderClass}`}>
    <h4 class="p__align--center">{ heading }</h4>
    <h6 class="p__align--center">{ subheading }</h6>
    <div class="price__container">
      {alwaysFree && <><p class="price">0 â‚¬</p><p>&nbsp;</p></>}
      {monthlyPrices && (
        <>
          <p class={`price price--old ${yearlyPrices ? 'monthly' : ''}`}>{ monthlyPrices.oldPrice }</p>
          <p class={`price ${yearlyPrices ? 'monthly' : ''}`}>{ monthlyPrices.price }</p>
        </>
      )}
      {yearlyPrices && (
        <>
          <p class={`price price--old ${monthlyPrices ? 'yearly' : ''}`}>{ yearlyPrices.oldPrice }</p>
          <p class={`price ${monthlyPrices ? 'yearly' : ''}`}>{ yearlyPrices.price }</p>
        </>
      )}
    </div>
    <ul class="price-card__list">
        {
            listItems.map((item) => (
              <li class="price-card__list-item"><i class="icofont-check-circled  icofont-2x"></i>
                {item}
              </li>
            ))
          }
    </ul>

    <ul class="price-card__list  price-card__list--extra">
        {
          listItemsExtra.map((itemextra) => (
            <li class="price-card__list-item"><i class="icofont-plus-circle  icofont-2x"></i></i>
              {itemextra}
            </li>
          ))
        }
    </ul>
    <div class="btn__container">
      {btn && (<a class="btn" href={ btn.href } set:html={ btn.text } />)}
    </div>
</div>

<style>

.price-card__container {
  display: flex;
  flex-direction: column;
  height: 100%;
  border-radius: var(--border-radius);
  box-shadow: 12px 16px 20px #F6F7F8;
  padding: 1.8em 1.8em 0 1.8em;
  background-color: #fff;
  margin: 0 auto auto auto;
}

.price-card__border--left {
    border: 1px solid var(--first-color);
}

.price-card__border--center {
  border: 1px solid #fcd2eb;
  background-color: #fcd2eb;
}

.price-card__border--right {
  border: 1px solid var(--first-color);
}

.price__container {
  margin: 1.6em 0;
  color: var(--first-color);
  text-align: center;
  font-size: var(--fs-300);
  font-family: var(--ff-heading);
  line-height: 1.2;
}

.price__container p {
  margin: 0;
}

@media screen and (min-width: 40em) {
  .price__container p {
    font-size: var(--fs-400);
  }
}

.price.price--old {
  text-decoration: line-through;
  text-decoration-thickness: 2px;
}

.price-card__list {
  list-style: none;
}

.price-card__list-item {
  list-style: none;
  padding: 0.4em;
  display: flex;
}

.icofont-check-circled,
.icofont-plus-circle {
  color: var(--first-color);
  display: flex;
  margin-right: 0.4em;
}

.btn__container {
    margin: 2em auto 3em auto;
    display: flex;
    justify-content: center;
    }

    .btn {
        border: 1px solid var(--first-color);
        background-color: var(--first-color);
        color: #fff;
        padding: 1rem;
        border-radius: var(--border-radius);
        text-decoration: none;
        font-weight: bold;
        text-align: center;
    }

    .btn:hover {
        background-color: #fff;
        color: var(--first-color);
    }

    .btn--center {
        display: flex;
        justify-content: center;
        align-items: flex-end;
    }
</style>
<script src="./toggle.js"></script>